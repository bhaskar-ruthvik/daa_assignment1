# https://www.robotstxt.org/robotstxt.html
User-agent: *
Disallow:


def MSE_loss(y_true, y_pred):
  return tf.reduce_mean(tf.square(y_true - y_pred))
  pass

def train_linear_regression(X_train,y_train,n_epochs,lr,logs = False):
    n_samples,n_features = X_train.shape
    w = tf.Variable(tf.random.normal((n_features, 1)))
    b = tf.Variable(0.0)
    for epoch in range(n_epochs):
    with tf.GradientTape() as tape:
        y_pred = tf.matmul(X_train, w) + b
        loss = MSE_loss(y_train, y_pred)
    grads = tape.gradient(loss, [w, b])
    optimizer = tf.optimizers.SGD(lr)
    optimizer.apply_gradients(zip(grads, [w, b]))
    if logs == True and epoch % 10 == 0:
        print(f"Epoch {epoch+1}: Loss: {loss.numpy()}")

    return w, b, loss